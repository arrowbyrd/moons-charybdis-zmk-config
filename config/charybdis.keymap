#include <dt-bindings/zmk/mouse.h>
#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    chosen { zmk,matrix_transform = &default_transform; };
};

&mt {
    quick-tap-ms = <200>;
    flavor = "tap-preferred";
    tapping-term-ms = <170>;
};

&lt {
    quick-tap-ms = <200>;
    flavor = "tap-preferred";
    tapping-term-ms = <170>;
};

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };
    };

    behaviors {
        ShiftCap: ShiftCap {
            compatible = "zmk,behavior-tap-dance";
            label = "SHIFTCAP";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kt CAPSLOCK>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        BASE {
            bindings = <
&kp GRAVE  &kp N1     &kp N2         &kp N3   &kp N4      &kp N5            &kp N6            &kp N7     &kp N8     &kp N9             &kp N0          &kp MINUS
&kp TAB    &kp Q      &kp W          &kp E    &kp R       &kp T                        &kp Y  &kp U      &kp I      &kp O              &kp P           &kp EQUAL
&ShiftCap  &kp A      &kp S          &kp D    &kp F       &kp G                        &kp H  &kp J      &kp K      &kp L              &mt RCTRL SEMI  &kp APOS
&mo 1      &kp Z      &kp X          &kp C    &kp V       &kp B                        &kp N  &kp M      &kp COMMA  &kp DOT            &lt 3 SLASH     &kp RSHIFT
           &kp SPACE  &kp BACKSPACE  &kp TAB  &kp DELETE  &kp LEFT_CONTROL  &kp ENTER         &mkp LCLK             &kp RIGHT_CONTROL
            >;
        };

        SYM {
            bindings = <
&kp ESCAPE  &kp F1       &kp F2     &kp F3                  &kp F4     &kp F5                &kp F6                                     &kp F7            &kp F8          &kp F9           &kp F10             &kp F11
&trans      &kp EXCL     &kp AT     &kp AMPERSAND           &kp PIPE   &kp LEFT_BRACE                            &kp RIGHT_BRACE        &kp PLUS          &kp UP_ARROW    &kp MINUS        &soft_off           &kp F12
&trans      &kp HASH     &kp EQUAL  &kp DOLLAR              &kp GRAVE  &kp LEFT_PARENTHESIS                      &kp RIGHT_PARENTHESIS  &kp LEFT_ARROW    &kp DOWN_ARROW  &kp RIGHT        &kp C_FAST_FORWARD  &trans
&trans      &kp PERCENT  &kp PIPE   &kp CARET               &kp TILDE  &kp LEFT_BRACKET                          &kp RIGHT_BRACKET      &kp K_MUTE        &kp C_VOL_DN    &kp C_VOLUME_UP  &kp C_PP            &trans
            &mo 3        &trans     &kp C_BACKLIGHT_TOGGLE  &to 2      &trans                &kt C_FAST_FORWARD                         &kp C_PLAY_PAUSE                  &to 0
            >;
        };

        NAV {
            bindings = <
&kp F12          &kp F1          &kp F2           &kp F3             &kp F4           &kp F5    &kp F6                &kp F7  &kp F8  &kp F9  &kp F10          &kp F11
&trans           &kp SCROLLLOCK  &kp PAUSE_BREAK  &kp UP             &kp EQUAL        &kp LBRC              &kp RBRC  &kp N7  &kp N8  &kp N9  &kp KP_PLUS      &trans
&kp PRINTSCREEN  &kp INSERT      &kp LEFT         &kp DOWN           &kp RIGHT        &kp LBKT              &kp RBKT  &kp N4  &kp N5  &kp N6  &kp KP_MINUS     &kp KP_DIVIDE
&trans           &kp DEL         &kp PG_UP        &kp CAPS           &kp PG_DN        &kp LPAR              &kp RPAR  &kp N1  &kp N2  &kp N3  &kp KP_MULTIPLY  &trans
                 &mo 3           &trans           &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &trans    &kp KP_DOT            &kp N0          &to 0
            >;
        };

        ADJ {
            bindings = <
&kp F12  &kp F1       &kp F2          &kp F3            &kp F4             &kp F5           &kp F6                &kp F7      &kp F8      &kp F9      &kp F10      &kp F11
&trans   &sys_reset   &bt BT_PRV      &bt BT_NXT        &bt BT_CLR         &out OUT_TOG             &bt BT_SEL 0  &bt BT_CLR  &bt BT_PRV  &bt BT_NXT  &sys_reset   &trans
&trans   &bootloader  &kp C_PREVIOUS  &kp C_PLAY_PAUSE  &kp C_NEXT         &kp C_MUTE               &bt BT_SEL 1  &mkp MB1    &mkp MB2    &mkp MB3    &bootloader  &trans
&trans   &trans       &mo 5           &mo 4             &kp C_VOLUME_DOWN  &kp C_VOLUME_UP          &bt BT_SEL 2  &trans      &mo 4       &mo 5       &trans       &trans
         &trans       &trans          &trans            &trans             &trans           &trans                &trans                  &to 0
            >;
        };

        SNIP {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans          &trans    &trans    &trans    &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans    &trans    &trans    &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &mkp MB1  &mkp MB2  &mkp MB3  &trans  &trans
&trans  &trans  &mo 5   &trans  &trans  &trans          &trans  &trans    &trans    &mo 5     &trans  &trans
        &trans  &trans  &trans  &trans  &trans  &trans          &trans              &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans          &trans    &trans    &trans    &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans    &trans    &trans    &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &mkp MB1  &mkp MB2  &mkp MB3  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans    &trans    &trans    &trans  &trans
        &trans  &trans  &trans  &trans  &trans  &trans          &trans              &trans
            >;
        };
    };
};
